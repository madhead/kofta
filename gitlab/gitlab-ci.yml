---
stages:
  - build
  - test
  - publish

# Build the distribution.
distr:
  stage:         build
  image:         openjdk:8
  # TODO:        Move to `variables` section when possible.
  # https://gitlab.com/gitlab-org/gitlab-runner/issues/1809
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - export GRADLE_OPTS='-Dorg.gradle.daemon=false'
  script:
    - ./gradlew assemble
  cache:
    key:         $CI_JOB_NAME
    paths:
      - .gradle/wrapper
      - .gradle/caches
      - build # Actually, caching build does not work because of files' access / modification time. Probably will be working one day.
  artifacts:
    name:        $CI_COMMIT_SHA-$CI_JOB_NAME
    paths:
      - build/distributions/kofta.tar
      - build/distributions/kofta.zip
    expire_in:   1 hour

# Run unit tests.
# Actually, unit tests parse https://www.packtpub.com/packt/offers/free-learning, so it is not "true" unit tests.
unit:
  stage:         test
  image:         openjdk:8
  # TODO:        Move to `variables` section when possible.
  # https://gitlab.com/gitlab-org/gitlab-runner/issues/1809
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - export GRADLE_OPTS='-Dorg.gradle.daemon=false'
  script:
    - ./gradlew test
  cache:
    key:         $CI_JOB_NAME
    paths:
      - .gradle/wrapper
      - .gradle/caches
      - build # Actually, caching build does not work because of files' access / modification time. Probably will be working one day.

# Check if logo.png in the root of the repo corresponds to the content of assets/src/logo.svg.
logo:
  stage:         test
  image:         madhead/imagemagick:latest
  script:
    - convert -background none -density 300 -resize 128x128 src/main/assets/logo.svg logo.check.png
    - magick compare -verbose -metric ae logo.png logo.check.png diff.png
  artifacts:
    name:        $CI_COMMIT_SHA-$CI_JOB_NAME
    paths:
      - diff.png
    expire_in:   1 hour
    when:        on_failure

gradle-version:
  stage: test
  image: openjdk:8
  script:
    - gradle_version=$(./gradlew --version | sed -rn 's/^Gradle (.+)$/\1/p')
    - latest_gradle_version=$(curl https://services.gradle.org/versions/current | python2 -c 'import json,sys;print json.load(sys.stdin)["version"]')
    - echo $gradle_version
    - echo $latest_gradle_version
    - '[[ $gradle_version == $latest_gradle_version ]]'
  allow_failure: true

# Publish to Bintray.
publish:
  stage:         publish
  image:
    name:        byrnedo/alpine-curl:latest
    entrypoint:
      - ''
  script:
    - curl -T build/distributions/kofta.tar -u$BINTRAY_USER:$BINTRAY_KEY -H "X-Bintray-Package:kofta" -H "X-Bintray-Version:$CI_COMMIT_SHA" https://api.bintray.com/content/madhead/junkyard/$CI_COMMIT_SHA/
    - curl -T build/distributions/kofta.zip -u$BINTRAY_USER:$BINTRAY_KEY -H "X-Bintray-Package:kofta" -H "X-Bintray-Version:$CI_COMMIT_SHA" https://api.bintray.com/content/madhead/junkyard/$CI_COMMIT_SHA/
    - curl -X POST -u$BINTRAY_USER:$BINTRAY_KEY https://api.bintray.com/content/madhead/junkyard/kofta/$CI_COMMIT_SHA/publish
  only:
    - master
